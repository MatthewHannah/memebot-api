scalar DateTime

type Query {
  info: String!
  memes: [Meme!]!
  meme(command: String!): Meme
  commands: [String!]!
  tags: [String!]!
}

type Mutation {
  createMeme(name: String!, author: UserInput!, url: String!): Meme!
  deleteMeme(name: String!): Meme
  addAliasToMeme(name: String!, alias: String!): Meme
  removeAliasFromMeme(name: String!, alias: String!): Meme
  addTagtoMeme(name: String!, tag: String!): Meme
  removeTagFromMeme(name: String!, tag: String!): Meme
  renameMeme(oldName: String!, newName: String!): Meme
  updateVolumeOfMeme(name: String, volume: Float): Meme
}

type Meme {
  _id: ID!
  name: String!
  author: User!
  url: String!
  commands: [String!]!
  tags: [String!]
  volume: Float!
  createdAt: DateTime!
}

type User {
  id: ID!
  name: String!
}

input UserInput {
  id: ID!
  name: String!
}
